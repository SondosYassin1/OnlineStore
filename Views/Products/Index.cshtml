@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
<<<<<<< Updated upstream
}
=======
    ViewData["Title"] = "Product Management";
}

<main class="container my-4">
<!-- Header section -->
<partial name="_ProductListHeaderPartial" model="Model"/>


<!-- Filter Section -->
<partial name="_ProductFilterPartial" model="Model.Filter" />

<!-- Products Table -->
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products.Any())
            {
                foreach (var product in Model.Products)
                {
                    <partial name="_ProductItemPartial" model="product" />
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center py-4">
                        <p class="text-muted mb-0">No products found. Try adjusting your filters or add a new product.</p>
                    </td>
                </tr>
            }            
        </tbody>
    </table>
</div>

<!-- Pagination -->
@if (Model.Pagination.TotalItems > 0)
{
    <partial name="_PaganationPartial" model="Model.Pagination" />
}
</main>
<!-- Delete confirmation -->
<partial name="_DeleteConfirmationPartial" />

@section Scripts
{
<script src="-/js/products.js"></script>
<script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            // Function to handel status taggles
            function toggleStates(productId, statusSType)
            {
                console.log("Togling ......")
                // in real life this is handled by AJAX request
            }
    </script>
}
>>>>>>> Stashed changes
